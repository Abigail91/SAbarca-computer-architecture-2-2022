from tkinter import *
from tkinter import Button
import time
from Memory import Memory
from MemoryBus import MemoryBus
from Processor import Processor
import threading
class interfaz:
	def  __init__(self, root):
		self.root = Tk = root
		self.root.geometry("1300x900")
		self.root.title("Simulador protocolo MESI")
		self.root.resizable(False, False)
		self.processors = []
		self.memory = Memory()
		self.bus = MemoryBus(self.memory)
		
		self.P0AInst= StringVar()
		self.P0AInst.set("----------")
		self.P0LInst= StringVar()
		self.P0LInst.set("----------")
		self.P0B0D= StringVar()
		self.P0B0D.set("----------")
		self.P0B1D= StringVar()
		self.P0B1D.set("----------")
		self.P0B2D= StringVar()
		self.P0B2D.set("----------")
		self.P0B3D= StringVar()
		self.P0B3D.set("----------")
		self.P0B0A= StringVar()
		self.P0B0A.set("----------")
		self.P0B1A= StringVar()
		self.P0B1A.set("----------")
		self.P0B2A= StringVar()
		self.P0B2A.set("----------")
		self.P0B3A= StringVar()
		self.P0B3A.set("----------")
		self.P0B0S= StringVar()
		self.P0B0S.set("----------")
		self.P0B1S= StringVar()
		self.P0B1S.set("----------")
		self.P0B2S= StringVar()
		self.P0B2S.set("----------")
		self.P0B3S= StringVar()
		self.P0B3S.set("----------")
		
		self.P1AInst= StringVar()
		self.P1AInst.set("----------")
		self.P1LInst= StringVar()
		self.P1LInst.set("----------")
		self.P1B0D= StringVar()
		self.P1B0D.set("----------")
		self.P1B1D= StringVar()
		self.P1B1D.set("----------")
		self.P1B2D= StringVar()
		self.P1B2D.set("----------")
		self.P1B3D= StringVar()
		self.P1B3D.set("----------")
		self.P1B0A= StringVar()
		self.P1B0A.set("----------")
		self.P1B1A= StringVar()
		self.P1B1A.set("----------")
		self.P1B2A= StringVar()
		self.P1B2A.set("----------")
		self.P1B3A= StringVar()
		self.P1B3A.set("----------")
		self.P1B0S= StringVar()
		self.P1B0S.set("----------")
		self.P1B1S= StringVar()
		self.P1B1S.set("----------")
		self.P1B2S= StringVar()
		self.P1B2S.set("----------")
		self.P1B3S= StringVar()
		self.P1B3S.set("----------")
	
		self.P2AInst= StringVar()
		self.P2AInst.set("----------")
		self.P2LInst= StringVar()
		self.P2LInst.set("----------")
		self.P2B0D= StringVar()
		self.P2B0D.set("----------")
		self.P2B1D= StringVar()
		self.P2B1D.set("----------")
		self.P2B2D= StringVar()
		self.P2B2D.set("----------")
		self.P2B3D= StringVar()
		self.P2B3D.set("----------")
		self.P2B0A= StringVar()
		self.P2B0A.set("----------")
		self.P2B1A= StringVar()
		self.P2B1A.set("----------")
		self.P2B2A= StringVar()
		self.P2B2A.set("----------")
		self.P2B3A= StringVar()
		self.P2B3A.set("----------")
		self.P2B0S= StringVar()
		self.P2B0S.set("----------")
		self.P2B1S= StringVar()
		self.P2B1S.set("----------")
		self.P2B2S= StringVar()
		self.P2B2S.set("----------")
		self.P2B3S= StringVar()
		self.P2B3S.set("----------")
		
		self.P3AInst= StringVar()
		self.P3AInst.set("----------")
		self.P3LInst= StringVar()
		self.P3LInst.set("----------")
		self.P3B0D= StringVar()
		self.P3B0D.set("----------")
		self.P3B1D= StringVar()
		self.P3B1D.set("----------")
		self.P3B2D= StringVar()
		self.P3B2D.set("----------")
		self.P3B3D= StringVar()
		self.P3B3D.set("----------")
		self.P3B0A= StringVar()
		self.P3B0A.set("----------")
		self.P3B1A= StringVar()
		self.P3B1A.set("----------")
		self.P3B2A= StringVar()
		self.P3B2A.set("----------")
		self.P3B3A= StringVar()
		self.P3B3A.set("----------")
		self.P3B0S= StringVar()
		self.P3B0S.set("----------")
		self.P3B1S= StringVar()
		self.P3B1S.set("----------")
		self.P3B2S= StringVar()
		self.P3B2S.set("----------")
		self.P3B3S= StringVar()
		self.P3B3S.set("----------")
		
		self.M0 = StringVar()
		self.M0.set("----------")
		self.M1 = StringVar()
		self.M1.set("----------")
		self.M2 = StringVar()
		self.M2.set("----------")
		self.M3 = StringVar()
		self.M3.set("----------")
		self.M4 = StringVar()
		self.M4.set("----------")
		self.M5 = StringVar()
		self.M5.set("----------")
		self.M6 = StringVar()
		self.M6.set("----------")
		self.M7 = StringVar()
		self.M7.set("----------")
	
		self.UI()
		self.back()


	def init(self):
		self.processors[0].runThread(False)
		self.processors[1].runThread(False)
		self.processors[2].runThread(False)
		self.processors[3].runThread(False)

		
	def step(self):
		self.processors[0].runThread(True)
		self.processors[1].runThread(True)
		self.processors[2].runThread(True)
		self.processors[3].runThread(True)
		
	def pause(self):
		self.processors[0].pauseThread()
		self.processors[1].pauseThread()
		self.processors[2].pauseThread()
		self.processors[3].pauseThread()
	


	def UI(self):
		ventana = self.root

		lblU = Label(ventana, textvariable=self.M0)
		lblU.grid(row=21, column=1)
		lblU = Label(ventana, textvariable=self.M1)
		lblU.grid(row=21, column=2)
		lblU = Label(ventana, textvariable=self.M2)
		lblU.grid(row=21, column=3)
		lblU = Label(ventana, textvariable=self.M3)
		lblU.grid(row=21, column=4)
		lblU = Label(ventana, textvariable=self.M4)
		lblU.grid(row=21, column=5)
		lblU = Label(ventana, textvariable=self.M5)
		lblU.grid(row=21, column=6)
		lblU = Label(ventana, textvariable=self.M6)
		lblU.grid(row=21, column=7)
		lblU = Label(ventana, textvariable=self.M7)
		lblU.grid(row=21, column=8)


		lblP0 = Label(ventana, text="P0", width=15, height=7)
		lblP0.grid(row=0, column=2)
		p0AInstLabel = Label(self.root, textvariable=self.P0AInst)
		p0AInstLabel.grid(row=1, column=2)
		p0LInstLabel = Label(self.root, textvariable=self.P0LInst)
		p0LInstLabel.grid(row=2, column=2)
		p0B0DL = Label(self.root, textvariable=self.P0B0D)
		p0B0DL.grid(row=6, column=2)
		p0B1DL = Label(self.root, textvariable=self.P0B1D)
		p0B1DL.grid(row=10, column=2)
		p0B2DL = Label(self.root, textvariable=self.P0B2D)
		p0B2DL.grid(row=14, column=2)
		p0B3DL = Label(self.root, textvariable=self.P0B3D)
		p0B3DL.grid(row=18, column=2)
		
		p0B0AL = Label(self.root, textvariable=self.P0B0A)
		p0B0AL.grid(row=5, column=2)
		p0B1AL = Label(self.root, textvariable=self.P0B1A)
		p0B1AL.grid(row=9, column=2)
		p0B2AL = Label(self.root, textvariable=self.P0B2A)
		p0B2AL.grid(row=13, column=2)
		p0B3AL = Label(self.root, textvariable=self.P0B3A)
		p0B3AL.grid(row=17, column=2)
		
		p0B0SL = Label(self.root, textvariable=self.P0B0S)
		p0B0SL.grid(row=4, column=2)
		p0B1SL = Label(self.root, textvariable=self.P0B1S)
		p0B1SL.grid(row=8, column=2)
		p0B2SL = Label(self.root, textvariable=self.P0B2S)
		p0B2SL.grid(row=12, column=2)
		p0B3SL = Label(self.root, textvariable=self.P0B3S)
		p0B3SL.grid(row=16, column=2)

		lblP1 = Label(ventana, text="P1", width=15, height=7)
		lblP1.grid(row=0, column=4)
		p1AInstLabel = Label(self.root, textvariable=self.P1AInst)
		p1AInstLabel.grid(row=1, column=4)
		p1LInstLabel = Label(self.root, textvariable=self.P1LInst)
		p1LInstLabel.grid(row=2, column=4)
		p1B0DL = Label(self.root, textvariable=self.P1B0D)
		p1B0DL.grid(row=6, column=4)
		p1B1DL = Label(self.root, textvariable=self.P1B1D)
		p1B1DL.grid(row=10, column=4)
		p1B2DL = Label(self.root, textvariable=self.P1B2D)
		p1B2DL.grid(row=14, column=4)
		p1B3DL = Label(self.root, textvariable=self.P1B3D)
		p1B3DL.grid(row=18, column=4)
		
		p1B0AL = Label(self.root, textvariable=self.P1B0A)
		p1B0AL.grid(row=5, column=4)
		p1B1AL = Label(self.root, textvariable=self.P1B1A)
		p1B1AL.grid(row=9, column=4)
		p1B2AL = Label(self.root, textvariable=self.P1B2A)
		p1B2AL.grid(row=13, column=4)
		p1B3AL = Label(self.root, textvariable=self.P1B3A)
		p1B3AL.grid(row=17, column=4)
		
		p1B0SL = Label(self.root, textvariable=self.P1B0S)
		p1B0SL.grid(row=4, column=4)
		p1B1SL = Label(self.root, textvariable=self.P1B1S)
		p1B1SL.grid(row=8, column=4)
		p1B2SL = Label(self.root, textvariable=self.P1B2S)
		p1B2SL.grid(row=12, column=4)
		p1B3SL = Label(self.root, textvariable=self.P1B3S)
		p1B3SL.grid(row=16, column=4)

		lblP2 = Label(ventana, text="P2", width=15, height=7)
		lblP2.grid(row=0, column=6)
		p2AInstLabel = Label(self.root, textvariable=self.P2AInst)
		p2AInstLabel.grid(row=1, column=6)
		p2LInstLabel = Label(self.root, textvariable=self.P2LInst)
		p2LInstLabel.grid(row=2, column=6)
		p2B0DL = Label(self.root, textvariable=self.P2B0D)
		p2B0DL.grid(row=6, column=6)
		p2B1DL = Label(self.root, textvariable=self.P2B1D)
		p2B1DL.grid(row=10, column=6)
		p2B2DL = Label(self.root, textvariable=self.P2B2D)
		p2B2DL.grid(row=14, column=6)
		p2B3DL = Label(self.root, textvariable=self.P2B3D)
		p2B3DL.grid(row=18, column=6)
		
		p2B0AL = Label(self.root, textvariable=self.P2B0A)
		p2B0AL.grid(row=5, column=6)
		p2B1AL = Label(self.root, textvariable=self.P2B1A)
		p2B1AL.grid(row=9, column=6)
		p2B2AL = Label(self.root, textvariable=self.P2B2A)
		p2B2AL.grid(row=13, column=6)
		p2B3AL = Label(self.root, textvariable=self.P2B3A)
		p2B3AL.grid(row=17, column=6)
		
		p2B0SL = Label(self.root, textvariable=self.P2B0S)
		p2B0SL.grid(row=4, column=6)
		p2B1SL = Label(self.root, textvariable=self.P2B1S)
		p2B1SL.grid(row=8, column=6)
		p2B2SL = Label(self.root, textvariable=self.P2B2S)
		p2B2SL.grid(row=12, column=6)
		p2B3SL = Label(self.root, textvariable=self.P2B3S)
		p2B3SL.grid(row=16, column=6)

		lblP3 = Label(ventana, text="P3", width=15, height=7)
		lblP3.grid(row=0, column=8)
		p3AInstLabel = Label(self.root, textvariable=self.P3AInst)
		p3AInstLabel.grid(row=1, column=8)
		p3LInstLabel = Label(self.root, textvariable=self.P3LInst)
		p3LInstLabel.grid(row=2, column=8)
		p3B0DL = Label(self.root, textvariable=self.P3B0D)
		p3B0DL.grid(row=6, column=8)
		p3B1DL = Label(self.root, textvariable=self.P3B1D)
		p3B1DL.grid(row=10, column=8)
		p3B2DL = Label(self.root, textvariable=self.P3B2D)
		p3B2DL.grid(row=14, column=8)
		p3B3DL = Label(self.root, textvariable=self.P3B3D)
		p3B3DL.grid(row=18, column=8)
		
		p3B0AL = Label(self.root, textvariable=self.P3B0A)
		p3B0AL.grid(row=5, column=8)
		p3B1AL = Label(self.root, textvariable=self.P3B1A)
		p3B1AL.grid(row=9, column=8)
		p3B2AL = Label(self.root, textvariable=self.P3B2A)
		p3B2AL.grid(row=13, column=8)
		p3B3AL = Label(self.root, textvariable=self.P3B3A)
		p3B3AL.grid(row=17, column=8)
		
		p3B0SL = Label(self.root, textvariable=self.P3B0S)
		p3B0SL.grid(row=4, column=8)
		p3B1SL = Label(self.root, textvariable=self.P3B1S)
		p3B1SL.grid(row=8, column=8)
		p3B2SL = Label(self.root, textvariable=self.P3B2S)
		p3B2SL.grid(row=12, column=8)
		p3B3SL = Label(self.root, textvariable=self.P3B3S)
		p3B3SL.grid(row=16, column=8)

		btn = Button(ventana, text = "Empezar Simulación", command=self.init, height=2)
		btn.grid(row=2, column=9)

		btn = Button(ventana, text = "Pausar Simulación", command=self.pause, height=2)
		btn.grid(row=4, column=9)

		btn = Button(ventana, text = "Simulación paso a paso", command=self.step, height=2)
		btn.grid(row=6, column=9)


		lblP3 = Label(ventana, text="Instrucción especifica", width=30, height=2)
		lblP3.grid(row=8, column=9)
		place = Label(ventana, text="P#: WRITE address; Data", width=30, height=2)
		place.grid(row=9, column=9)
		place = Label(ventana, text="P#: READ address", width=30, height=2)
		place.grid(row=10, column=9)
		entry = Entry()
		entry.grid(row=11, column=9)
		btnCustom = Button(ventana, text = "Agregar Instrucción", command=self.addCustom, height=2)
		btnCustom.grid(row=12, column=9)

		lblP3 = Label(ventana, text="Alertas", width=30, height=2)
		lblP3.grid(row=15, column=9)

		lbl = Label(ventana, text="", width=10, height=4)
		lbl.grid(row=0, column=0)
		lblE = Label(ventana, text="Ejecutando", width=30, height=2)
		lblE.grid(row=1, column=0)
		lblU = Label(ventana, text="Última ejecución", width=30, height=2)
		lblU.grid(row=2, column=0)
		lblU = Label(ventana, text="Bloque 0", width=30, height=2)
		lblU.grid(row=3, column=0)
		lblU = Label(ventana, text="Estado", width=30)
		lblU.grid(row=4, column=0)
		lblU = Label(ventana, text="Dirección", width=30)
		lblU.grid(row=5, column=0)
		lblU = Label(ventana, text="Dato", width=30)
		lblU.grid(row=6, column=0)
		lblU = Label(ventana, text="Bloque 1", width=30, height=2)
		lblU.grid(row=7, column=0)
		lblU = Label(ventana, text="Estado", width=30)
		lblU.grid(row=8, column=0)
		lblU = Label(ventana, text="Dirección", width=30)
		lblU.grid(row=9, column=0)
		lblU = Label(ventana, text="Dato", width=30)
		lblU.grid(row=10, column=0)
		lblU = Label(ventana, text="Bloque 2", width=30, height=2)
		lblU.grid(row=11, column=0)
		lblU = Label(ventana, text="Estado", width=30)
		lblU.grid(row=12, column=0)
		lblU = Label(ventana, text="Dirección", width=30)
		lblU.grid(row=13, column=0)
		lblU = Label(ventana, text="Dato", width=30)
		lblU.grid(row=14, column=0)
		lblU = Label(ventana, text="Bloque 3", width=30,height=2)
		lblU.grid(row=15, column=0)
		lblU = Label(ventana, text="Estado", width=30)
		lblU.grid(row=16, column=0)
		lblU = Label(ventana, text="Dirección", width=30)
		lblU.grid(row=17, column=0)
		lblU = Label(ventana, text="Dato", width=30)
		lblU.grid(row=18, column=0)

		lblU = Label(ventana, text="Memoria",height=4)
		lblU.grid(row=19, column=4)

		lblU = Label(ventana, text="Bloque 0")
		lblU.grid(row=20, column=1)
		lblU = Label(ventana, text="Bloque 1")
		lblU.grid(row=20, column=2)

		lblU = Label(ventana, text="Bloque 2")
		lblU.grid(row=20, column=3)
		lblU = Label(ventana, text="Bloque 3")
		lblU.grid(row=20, column=4)

		lblU = Label(ventana, text="Bloque 4")
		lblU.grid(row=20, column=5)
		lblU = Label(ventana, text="Bloque 5")
		lblU.grid(row=20, column=6)

		lblU = Label(ventana, text="Bloque 6")
		lblU.grid(row=20, column=7)
		lblU = Label(ventana, text="Bloque 7")
		lblU.grid(row=20, column=8)
	
	def back(self):
		b = self.bus
		p0 = Processor(0, b)
		p1 = Processor(1, b)
		p2 = Processor(2, b)
		p3 = Processor(3, b)
		self.processors = [p0,p1,p2,p3]
		self.bus.processors = self.processors

		UIThread = threading.Thread(target=self.updateUI, daemon=True)
		UIThread.start()
		
	
		
	def updateUI(self):
		while 1:
			self.P0AInst.set(self.processors[0].instRunning)
			self.P0LInst.set(self.processors[0].lastInst)
			
			self.P0B0S.set(self.processors[0].control.cache.getBlock(0).bitState)
			self.P0B1S.set(self.processors[0].control.cache.getBlock(1).bitState)
			self.P0B2S.set(self.processors[0].control.cache.getBlock(2).bitState)
			self.P0B3S.set(self.processors[0].control.cache.getBlock(3).bitState)
			
			self.P0B0D.set(hex(self.processors[0].control.cache.getBlock(0).data)[2:])
			self.P0B1D.set(hex(self.processors[0].control.cache.getBlock(1).getData())[2:])
			self.P0B2D.set(hex(self.processors[0].control.cache.getBlock(2).getData())[2:])
			self.P0B3D.set(hex(self.processors[0].control.cache.getBlock(3).getData())[2:])
			
			self.P0B0A.set(bin(self.processors[0].control.cache.getBlock(0).memoryAddress)[2:])
			self.P0B1A.set(bin(self.processors[0].control.cache.getBlock(1).memoryAddress)[2:])
			self.P0B2A.set(bin(self.processors[0].control.cache.getBlock(2).memoryAddress)[2:])
			self.P0B3A.set(bin(self.processors[0].control.cache.getBlock(3).memoryAddress)[2:])
			
			self.P1AInst.set(self.processors[1].instRunning)
			self.P1LInst.set(self.processors[1].lastInst)
			self.P1B0S.set(self.processors[1].control.cache.getBlock(0).bitState)
			self.P1B1S.set(self.processors[1].control.cache.getBlock(1).bitState)
			self.P1B2S.set(self.processors[1].control.cache.getBlock(2).bitState)
			self.P1B3S.set(self.processors[1].control.cache.getBlock(3).bitState)
			self.P1B0D.set(hex(self.processors[1].control.cache.getBlock(0).data)[2:])
			self.P1B1D.set(hex(self.processors[1].control.cache.getBlock(1).getData())[2:])
			self.P1B2D.set(hex(self.processors[1].control.cache.getBlock(2).getData())[2:])
			self.P1B3D.set(hex(self.processors[1].control.cache.getBlock(3).getData())[2:])
			self.P1B0A.set(bin(self.processors[1].control.cache.getBlock(0).memoryAddress)[2:])
			self.P1B1A.set(bin(self.processors[1].control.cache.getBlock(1).memoryAddress)[2:])
			self.P1B2A.set(bin(self.processors[1].control.cache.getBlock(2).memoryAddress)[2:])
			self.P1B3A.set(bin(self.processors[1].control.cache.getBlock(3).memoryAddress)[2:])
			
			self.P2AInst.set(self.processors[2].instRunning)
			self.P2LInst.set(self.processors[2].lastInst)
			self.P2B0S.set(self.processors[2].control.cache.getBlock(0).bitState)
			self.P2B1S.set(self.processors[2].control.cache.getBlock(1).bitState)
			self.P2B2S.set(self.processors[2].control.cache.getBlock(2).bitState)
			self.P2B3S.set(self.processors[2].control.cache.getBlock(3).bitState)
			self.P2B0D.set(hex(self.processors[2].control.cache.getBlock(0).data)[2:])
			self.P2B1D.set(hex(self.processors[2].control.cache.getBlock(1).getData())[2:])
			self.P2B2D.set(hex(self.processors[2].control.cache.getBlock(2).getData())[2:])
			self.P2B3D.set(hex(self.processors[2].control.cache.getBlock(3).getData())[2:])
			self.P2B0A.set(bin(self.processors[2].control.cache.getBlock(0).memoryAddress)[2:])
			self.P2B1A.set(bin(self.processors[2].control.cache.getBlock(1).memoryAddress)[2:])
			self.P2B2A.set(bin(self.processors[2].control.cache.getBlock(2).memoryAddress)[2:])
			self.P2B3A.set(bin(self.processors[2].control.cache.getBlock(3).memoryAddress)[2:])
			
			self.P3AInst.set(self.processors[3].instRunning)
			self.P3LInst.set(self.processors[3].lastInst)
			self.P3B0S.set(self.processors[3].control.cache.getBlock(0).bitState)
			self.P3B1S.set(self.processors[3].control.cache.getBlock(1).bitState)
			self.P3B2S.set(self.processors[3].control.cache.getBlock(2).bitState)
			self.P3B3S.set(self.processors[3].control.cache.getBlock(3).bitState)
			self.P3B0D.set(hex(self.processors[3].control.cache.getBlock(0).data)[2:])
			self.P3B1D.set(hex(self.processors[3].control.cache.getBlock(1).getData())[2:])
			self.P3B2D.set(hex(self.processors[3].control.cache.getBlock(2).getData())[2:])
			self.P3B3D.set(hex(self.processors[3].control.cache.getBlock(3).getData())[2:])
			self.P3B0A.set(bin(self.processors[3].control.cache.getBlock(0).memoryAddress)[2:])
			self.P3B1A.set(bin(self.processors[3].control.cache.getBlock(1).memoryAddress)[2:])
			self.P3B2A.set(bin(self.processors[3].control.cache.getBlock(2).memoryAddress)[2:])
			self.P3B3A.set(bin(self.processors[3].control.cache.getBlock(3).memoryAddress)[2:])
			
			self.M0.set(hex(self.memory.read(0))[2:])
			self.M1.set(hex(self.memory.read(1))[2:])
			self.M2.set(hex(self.memory.read(2))[2:])
			self.M3.set(hex(self.memory.read(3))[2:])
			self.M4.set(hex(self.memory.read(4))[2:])
			self.M5.set(hex(self.memory.read(5))[2:])
			self.M6.set(hex(self.memory.read(6))[2:])
			self.M7.set(hex(self.memory.read(7))[2:])
			
			time.sleep(0.1)


	def addCustom():
		print("Hello")


